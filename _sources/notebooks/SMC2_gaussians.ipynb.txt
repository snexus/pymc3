{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Sequential Monte Carlo with two gaussians"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Running on PyMC3 v3.4.1\n"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import pymc3 as pm\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from pymc3.step_methods import smc\n",
    "import theano.tensor as tt\n",
    "import shutil\n",
    "\n",
    "plt.style.use('seaborn-darkgrid')\n",
    "print('Running on PyMC3 v{}'.format(pm.__version__))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Sampling from $n$-dimensional distributions with multiple peaks with a standard Metropolis-Hastings algorithm can be difficult, if not impossible, as the Markov chain often gets stuck in either of the minima.\n",
    "\n",
    "A Sequential Monte Carlo sampler (SMC) is a way to overcome this problem, or at least to ameliorate it. SMC samplers are very similar to genetic algorithms, which are biologically-inspired algorithms that can be summarized as follows:\n",
    "\n",
    "1. Initialization: set a population of individuals\n",
    "2. Mutation: individuals are somehow modified or perturbed\n",
    "3. Selection: individuals with high _fitness_ have higher chance to generate _offspring_.\n",
    "4. Iterate by using individuals from 3 to set the population in 1.\n",
    "\n",
    "If each _individual_ is a particular solution to a problem, then a genetic algorithm will eventually produce good solutions to that problem. One key aspect is to generate enough diversity (mutation step) to explore the solution space avoiding getting trap in local minima and then apply _selection_ to _probabilistically_ keep reasonable solutions while also keeping some diversity. Being too greedy and short-sighted could be problematic, _bad_ solutions in a given moment could lead to _good_ solutions in the future.\n",
    "\n",
    "Moving into the realm of Bayesian statistics each individual is a point in the _posterior space_, mutations can be done in several ways, a general solution is to use a MCMC method (like Metropolis-Hastings) and run many Markov chains in parallel. The _fitness_ is given by the posterior, points with low posterior density will be removed and points high posterior density will be used as the starting point of a next round of Markov chains (This step is known as _reweighting_ in the SMC literature). The size of the population is kept fixed at some predefined value, so if a point is removed some other point should be used to start at least two new Markov chains.\n",
    "\n",
    "The previous paragraph is summarized in the next figure, the first subplot show 5 samples (orange dots) at some particular stage. The second subplots show how this samples are reweighted according to the their posterior density (blue Gaussian curve). The third subplot shows the result of running a certain number of Metropolis steps, starting from the _selected/reweighting_ samples in the second subplots, notice how the two samples with the lower posterior density (smaller circles) are discarded and not used to seed Markov chains.\n",
    "\n",
    "<img src=\"smc.png\" alt=\"SMC stages\"> \n",
    "\n",
    "So far we have that the SMC sampler is just a bunch of parallel Markov chains, not very impressive, right? Well not that fast. SMC proceed by moving _sequentially_ trough a series of stages, starting from a simple to sample distribution until it get to the posterior distribution. All this intermediate distribution (or _tempered posterior distributions_) are controlled by _tempering_ parameter called $\\beta$. SMC takes this idea from other _tempering_ methods originated from a branch of physics known as _statistical mechanics_. The idea is as follow the number of accessible states a _real physical_ system can reach is controlled by the temperature, if the temperature is the lowest possible ($0$ Kelvin) the system is trapped in a single state, on the contrary if the temperature is $\\infty$ all states are equally accessible! In the _statistical mechanics_ literature $\\beta$ is know as the inverse temperature, the higher the more constrained the system is. Going back to the Bayesian statistics context a _natural_ analogy to these physical systems is given by the following formula:\n",
    "\n",
    "$$p(\\theta \\mid y)_{\\beta} \\propto p(y \\mid \\theta)^{\\beta} p(\\theta)$$\n",
    "\n",
    "When $\\beta = 0$, the _tempered posterior_ is just the prior and when $\\beta=1$ the _tempered posterior_ is the true posterior. SMC starts with $\\beta = 0$ and progress by always increasing the value of $\\beta$, at each stage, until it reach 1. This is represented in the avobe figure by a narrower Gaussian distribution in the third subplot.\n",
    "\n",
    "At each stage SMC will use `chains` independent Markov chains to explore the _tempered posterior_ (the black arrow in the figure). The final samples, _i.e_ those stored in the `trace`, will be taken exclusively from the final stage ($\\beta = 1$), i.e. the true posterior. The final samples are taken from all the `chains`, thus if you used 100 `chains` and want 2000 final `samples`, SMC will take 20 samples from each chain.\n",
    "\n",
    "The successive values of $\\beta$ are determined automatically from the sampling results of the previous intermediate distribution. SMC will try to keep the effective samples size (ESS) constant. Thus, the harder the distribution is to sample the larger the number of stages SMC will take. In other words the _cooling_ will be slow and the successive values of $\\beta$ will change in small steps.\n",
    "\n",
    "Two more parameters that are automatically determined are:\n",
    "* The number of steps each Markov chain takes to explore the _tempered posterior_ (`n_steps`) is determined from the acceptance rate at each stage, SMC use a _tune_interval_ to do this.\n",
    "* The width of the proposal distribution (`MultivariateProposal`) is also adjusted adaptively based on the  acceptance rate at each stage.\n",
    "\n",
    "\n",
    "Even when SMC uses the Metropolis-Hasting algorithm under the hood, it has several advantages over it:\n",
    "\n",
    "* It can sample from $n$-dimensional distributions with multiple peaks.\n",
    "* It does not have a burn-in period, it starts by sampling directly from the prior and then at each stage the starting points are already distributed according to the tempered posterior (due to the re-weighting step).\n",
    "* It is inherently parallel.\n",
    "* As a by-product it gives an estimate of the _marginal likelihood_."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The number of Markov chains and the number of steps each Markov chain is sampling has to be defined, as well as the `tune_interval` and the number of processors to be used in the parallel sampling. In this very simple example using only one processor is faster than forking the interpreter. However, if the calculation cost of the model increases it becomes more efficient to use many processors."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "chains = 500"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Define the number of dimensions for the multivariate gaussians, their weights and the covariance matrix. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "n = 4\n",
    "\n",
    "mu1 = np.ones(n) * (1. / 2)\n",
    "mu2 = -mu1\n",
    "\n",
    "stdev = 0.1\n",
    "sigma = np.power(stdev, 2) * np.eye(n)\n",
    "isigma = np.linalg.inv(sigma)\n",
    "dsigma = np.linalg.det(sigma)\n",
    "\n",
    "w1 = 0.1\n",
    "w2 = (1 - w1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The PyMC3 model.  Note that we are making two gaussians, where one has `w1` (90%) of the mass:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def two_gaussians(x):\n",
    "    log_like1 = - 0.5 * n * tt.log(2 * np.pi) \\\n",
    "                - 0.5 * tt.log(dsigma) \\\n",
    "                - 0.5 * (x - mu1).T.dot(isigma).dot(x - mu1)\n",
    "    log_like2 = - 0.5 * n * tt.log(2 * np.pi) \\\n",
    "                - 0.5 * tt.log(dsigma) \\\n",
    "                - 0.5 * (x - mu2).T.dot(isigma).dot(x - mu2)\n",
    "    return tt.log(w1 * tt.exp(log_like1) + w2 * tt.exp(log_like2))\n",
    "\n",
    "\n",
    "with pm.Model() as ATMIP_test:\n",
    "    X = pm.Uniform('X',\n",
    "                   shape=n,\n",
    "                   lower=-2. * np.ones_like(mu1),\n",
    "                   upper=2. * np.ones_like(mu1),\n",
    "                   testval=-1. * np.ones_like(mu1))\n",
    "    llk = pm.Potential('llk', two_gaussians(X))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note: In contrast to other pymc3 samplers here we have to define a random variable `like` that contains the model likelihood. The likelihood has to be stored in the sampling traces along with the model parameter samples, in order to determine the coefficient of variation [COV] in each transition stage."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, we initialise the sampler and execute the sampling:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Adding model likelihood to RVs!\n",
      "Init new trace!\n",
      "Sample initial stage: ...\n",
      "Beta: 0.000000 Stage: 0\n",
      "Initializing chain traces ...\n",
      "Sampling ...\n",
      "100%|██████████| 500/500 [00:00<00:00, 6684.43it/s]\n",
      "Beta: 0.009918 Stage: 1\n",
      "Initializing chain traces ...\n",
      "Sampling ...\n",
      "100%|██████████| 500/500 [00:01<00:00, 339.23it/s]\n",
      "Beta: 0.019301 Stage: 2\n",
      "Initializing chain traces ...\n",
      "Sampling ...\n",
      "100%|██████████| 500/500 [00:00<00:00, 1549.49it/s]\n",
      "Beta: 0.034171 Stage: 3\n",
      "Initializing chain traces ...\n",
      "Sampling ...\n",
      "100%|██████████| 500/500 [00:00<00:00, 695.12it/s]\n",
      "Beta: 0.065127 Stage: 4\n",
      "Initializing chain traces ...\n",
      "Sampling ...\n",
      "100%|██████████| 500/500 [00:00<00:00, 5006.89it/s]\n",
      "Beta: 0.134567 Stage: 5\n",
      "Initializing chain traces ...\n",
      "Sampling ...\n",
      "100%|██████████| 500/500 [00:02<00:00, 196.24it/s]\n",
      "Beta: 0.280304 Stage: 6\n",
      "Initializing chain traces ...\n",
      "Sampling ...\n",
      "100%|██████████| 500/500 [00:00<00:00, 840.37it/s]\n",
      "Beta: 0.564121 Stage: 7\n",
      "Initializing chain traces ...\n",
      "Sampling ...\n",
      "100%|██████████| 500/500 [00:00<00:00, 3714.59it/s]\n",
      "Beta > 1.: 1.049291\n",
      "Sample final stage\n",
      "Initializing chain traces ...\n",
      "Sampling ...\n",
      "100%|██████████| 500/500 [00:00<00:00, 808.22it/s]\n"
     ]
    }
   ],
   "source": [
    "with ATMIP_test:\n",
    "    trace = pm.sample(5000, chains=chains, step=pm.SMC())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note: Complex models run for a long time and might stop for some reason during the sampling. In order to restart the sampling in the stage when the sampler stopped, set the stage argument to the right stage number(`stage=4`). The `rm_flag` determines whether existing results are deleted - there is NO additional warning, so the user should pay attention to that one! "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Plotting the results using the traceplot:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x144 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pm.traceplot(trace);"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
